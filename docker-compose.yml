name: fastapi-dramatiq

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: fastapi_dramatiq
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/fastapi_dramatiq
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: ["uvicorn", "app.api:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    develop:
      watch:
        - action: sync
          path: ./app
          target: /app/app
          ignore:
            - .venv
        - path: ./pyproject.toml
          action: rebuild

  worker:
    build: .
    command: ["dramatiq", "app.tasks.jobs", "--processes", "2", "--threads", "4"]
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/fastapi_dramatiq
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    develop:
      watch:
        - action: sync+restart
          path: ./app
          target: /app/app
          ignore:
            - .venv
        - path: ./pyproject.toml
          action: rebuild

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  # postgres_data:
  rabbitmq_data:
  redis_data: